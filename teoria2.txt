						MODELLI CLASSICI DI DB E TECNICHE DI PROGETTO

	Il DBMS separa i dati dalle applicazioni, il DBMS a le seguenti proprietà:
		- indipendenza fisica --> si puo' interagire con il modello logico indipendentemente
						dallo schema fisico. 
		- indipendenza logica --> si puo' interagire con lo schema esterno indipendentemente dallo schema logico. 
	
	MODELLO LOGICO:
		E' l'insieme di costrutti utilizzti per organizzare i dati e descriverne la dinamica. 
		Caratterizzato da concetti (strutturare/organizzare i dati) e regole (descrivono eventuali vincoli)
	
	Regole e concetti sono generali, indipendentemente dall'applicazione che lo utilizza. 
		Possibilità di inserire vincoli sui dati [dato > 0] considera solo quelli >0.
	
	Possibili modelli logici:
		- gerarchico --> tramite albero - radice è il record principale - relazione padre figlio 1 a N, figlio padre 1 a 1.
				|
				|				
			Svantaggi --> dipendenza tra schema logico e fisico; operazioni non efficenti

		- reticolare --> tramite grafo - non esiste una radice - connessioni tramite record connettori - link con puntatori
				|
				|
			Svantaggi --> alta complessità di gestione; difficile da modificare; +mem. (puntatori)

		- relazionale --> tramite le tabelle (non dublica i dati)
		- Oggetti --> OOP - dati e comportamento sono inglobati nell'oggeto della classe
		- XML (eXtensible Markup Language) - formato molto compatibile semplice file formato testo - usato dalla Pubblica Amministrazione
		- schema-less --> (NoSQL) per superare la rigidità del modello relazionale
	
	Vantaggi modello relazionale:
		- indipendenza dei dati
		- non legame tra fisico e logico
		- non usa puntatori per l'inserimento dei dati

	Indipendenza dalla struttura FISICA --> modifiche alla rappresentazione fisica non portano modifiche alla APP
	Indipendenza della struttura LOGICA --> possibile modificare la struttura logica senza variare le applicazioni

	
	
Progettazione di DataBase

	1. analisi del problema
	2. progetto concettuale DB (modello entità-relazione)
	3. progettazione logica (schema logico)
	4. progettazione fisica e implementazione
	5. realizzazione delle applicazioni

SQL è un linguaggio dichiarativo
	- può define gli schemi delle relazioni DDL (Data Definition Language)
	- agire su dati DML (Data Manipulation Language)
	- possibile estrarre info tramite le QL (Query Language)

